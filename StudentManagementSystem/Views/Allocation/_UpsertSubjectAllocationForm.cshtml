@model SMS.Model.Allocation.SubjectAllocationBO

<form id="SubjectAllocationForm" asp-action="UpsertTeacherSubject" asp-controller="Allocation" method="post" class="border p-4 mx-auto Customform" style="max-width: 600px;">
    <input type="hidden" asp-for="SubjectAllocationID" value="@(Model.SubjectAllocationID ?? null)" />
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class = "text-danger" ></div>

    

    <div class="form-group row m-1">
        <div class="col-md-4 p-2">
            @Html.LabelFor(model => model.SubjectID, "Subject")<span class="required-asterisk text-danger">*</span>
        </div>
        <div class="col-md-8">
            @if (Model.SubjectAllocationID != null)
            {
                @Html.DropDownListFor(model => model.SubjectID, new SelectList(ViewBag.Subjects, "SubjectID", "Name"), new { @class = "form-select", disabled = "disabled" })
                @Html.HiddenFor(model => model.SubjectID)
            }
            else
            {
                @Html.DropDownListFor(model => model.SubjectID, new SelectList(ViewBag.Subjects, "SubjectID", "Name"), "-Select Subject-", new { @class = "form-select" })
            }


            @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-4 p-2">
            @Html.LabelFor(model => model.TeacherID, "Teacher")<span class="required-asterisk text-danger">*</span>
        </div>
        <div class="col-md-8">
            @if (ViewBag.Subjects != null)
            {
                @Html.DropDownListFor(model => model.TeacherID, new SelectList(ViewBag.Teachers, "TeacherID", "DisplayName"), "-Select Teacher-", new { @class = "form-select" })
                
            }
            else
            {
                <p>No Subject available</p>
            }

            @Html.ValidationMessageFor(model => model.TeacherID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row m-2">
        <div class="col-md-10 offset-md-4">
            <br />
            <input type="submit" value="@((Model.SubjectAllocationID == null ? "Create" : "Update"))" class="btn text-light" style="background-color: #9F2B68" />
            <a href="#" class="btn btn-secondary" onclick="backSubjectAllocation()">Back</a>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {
        $('#SubjectAllocationForm').submit(function (event) {
            event.preventDefault();

            var form = $(this);
            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                success: function (response) {
                    addTeacherSubjectAllocationSuccess(response);
                },
                error: function (xhr, status, error) {
                    addTeacherSubjectAllocationFailure(xhr, status, error);
                }
            });
        });
    });
</script>


